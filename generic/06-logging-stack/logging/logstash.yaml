apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-pipeline
data:
  logstash.conf: |-
    input {
      beats {
        port => 5044
      }
    }

    filter {
      json {
        source => "message"
      }
      if [log_name] == "zookeeper.log" {
        grok {
            match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} \[myid:%{GREEDYDATA:zk_id:int}\] - %{GREEDYDATA:log_level} \[%{GREEDYDATA:thread_name}\] - %{GREEDYDATA:message}" }
            overwrite => [ "message" ]
            add_tag => ["zookeeper_log"]
        }
      } else if [log_name] == "vds_server_access.log" {
        grok {
          match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} \[myid:%{GREEDYDATA:zk_id:int}\] - %{GREEDYDATA:log_level} \[%{GREEDYDATA:thread_name}\] - %{GREEDYDATA:message}" }
            overwrite => [ "message" ]
            add_tag => ["zookeeper_log"]
        }
      }
      date{
        match => ["timestamp", "ISO8601"]
      }
      ruby {
        code => "event.set('indexDay', event.get('[@timestamp]').time.localtime('+09:00').strftime('%Y%m%d'))"
      }      
    }

    output {
      elasticsearch {
        hosts => ["elasticsearch:9200"]
        template => "/usr/share/logstash/templates/logstash.template.json"
        template_name => "logstash"
        template_overwrite => true
        index => "logstash-%{indexDay}"
        codec => json
      }
      stdout {
        codec => rubydebug
      }
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: logstash-template
data:
  logstash.template.json: |-
    {
        "template": "logstash",
        "index_patterns": [
            "logstash-*"
        ],
        "settings": {
            "number_of_shards": 1
        },
        "mappings": {
            "properties": {
                "name": {
                    "type": "keyword"
                },
                "class": {
                    "type": "keyword"
                },
                "state": {
                    "type": "integer"
                },
                "@timestamp": {
                    "type": "date"
                }
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: logstash
spec:
  selector:
    matchLabels:
      app: logstash
  replicas: 1
  template:
    metadata:
      name: logstash
      labels:
        app: logstash
    spec:
      containers:
        - name: logstash
          image: docker.elastic.co/logstash/logstash:7.5.0
          ports:
            - name: logstash-beats
              containerPort: 5044
          volumeMounts:
            - mountPath: /usr/share/logstash/pipeline
              name: logstash-pipeline
              readOnly: false
            - mountPath: /usr/share/logstash/templates
              name: logstash-template
              readOnly: false
      volumes:
        - name: logstash-pipeline
          configMap:
            defaultMode: 420
            name: logstash-pipeline
        - name: logstash-template
          configMap:
            defaultMode: 420
            name: logstash-template
---
apiVersion: v1
kind: Service
metadata:
  name: logstash
  labels:
    name: logstash
spec:
  selector:
    app: logstash
  ports:
    - name: logstash-beats
      protocol: TCP
      port: 5044
