apiVersion: v1
kind: Secret
metadata:
  name: fidrootcreds
type: Opaque
data:
  username: Y249RGlyZWN0b3J5IE1hbmFnZXI= # cn=Directory Manager
  password: c2VjcmV0MTIzNA== # secret1234
---
apiVersion: v1
data:
  ZK: "external"
  ZK_CONN_STR: "zookeeper.fid-demo.svc.cluster.local:2181" # this should match the service name from zk deployment
  ZK_CLUSTER: "fid-demo"
  LICENSE: "PASTE_LICENSE_HERE"
kind: ConfigMap
metadata:
  labels:
    role: fid
  name: fid-environment-variables
---
apiVersion: v1
kind: Service
metadata:
  name: fid
  labels:
    app: fid
spec:
  ports:
    - port: 9100
      name: admin-http
    - port: 2389
      name: ldap
    - port: 2636
      name: ldaps
  selector:
    app: fid
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: fid-cp
  labels:
    app: fid-cp
spec:
  ports:
    - port: 7070
      name: cp-http
    - port: 7171
      name: cp-https
    - port: 8089
      name: http
    - port: 8090
      name: https
  selector:
    statefulset.kubernetes.io/pod-name: fid-0
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: fid
  labels:
    kubernetes.io/os: linux
spec:
  selector:
    matchLabels:
      app: fid # has to match .spec.template.metadata.labels
  serviceName: "fid"
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: fid # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 120
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: check-zk-write
          imagePullPolicy: IfNotPresent
          image: alpine:latest
          command:
              [
                "/bin/sh",
                "-c",
                "if [ $HOSTNAME == fid-0 ]; then until nc -w 2 -z zookeeper-2.zookeeper.fid-demo.svc.cluster.local 8080; do echo Waiting for zookeeper-2.zookeeper.fid-demo.svc.cluster.local -- 2888;sleep 10; done;echo \"zookeeper-2 is up!\"; sleep 60;fi"
              ] 
          securityContext:
            privileged: true
        - name: migration
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c","if [ $HOSTNAME == fid-0 ]; then apk add -q --no-cache curl tree; cd /migrations ; curl -o export.zip https://raw.githubusercontent.com/radiantlogic-devops/docker-compose/master/05-monitoring-stack/configs/fid/export-2.zip; tree;fi"]
          volumeMounts:
          - name: migrations
            mountPath: /migrations
          securityContext:
            privileged: true
        - name: sysctl
          image: busybox
          imagePullPolicy: IfNotPresent
          command:
            [
              "/bin/sh",
              "-c",
              "sysctl -w vm.max_map_count=262144 && set -e && ulimit -n 65536",
            ]
          securityContext:
            privileged: true
      containers:
        - name: fid
          image: radiantone/fid:7.3.16 # Do not change as migration will not be success
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                  [
                    "/bin/sh",
                    "-c",
                    "echo Hello from the fid postStart handler > /opt/radiantone/vds/lifecycle.txt",
                  ]
            preStop:
              exec:
                command: ["/opt/radiantone/vds/bin/stopVDSServer.sh"]
          ports:
            - containerPort: 2181
              name: zk-client
            - containerPort: 7070
              name: cp-http
            - containerPort: 7171
              name: cp-https
            - containerPort: 9100
              name: admin-http
            - containerPort: 9101
              name: admin-https
            - containerPort: 2389
              name: ldap
            - containerPort: 2636
              name: ldaps
            - containerPort: 8089
              name: http
            - containerPort: 8090
              name: https
          readinessProbe:
            tcpSocket:
              port: 2389
            initialDelaySeconds: 120
            periodSeconds: 30
            failureThreshold: 5
            successThreshold: 1
          livenessProbe:
            tcpSocket:
              port: 9100
            initialDelaySeconds: 120
            periodSeconds: 30
            failureThreshold: 5
            successThreshold: 1
          envFrom:
            - configMapRef:
                name: fid-environment-variables
          env:
            - name: ZK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fidrootcreds
                  key: password
          volumeMounts:
            - name: r1-pvc
              mountPath: /opt/radiantone/vds
            - name: migrations
              mountPath: /migrations
          resources:
            limits:
              cpu: "4"
              memory: 8Gi
            requests:
              cpu: "2"
              memory: 4Gi
          command: ["/bin/sh", "-c"]
          args:
            [
              "if [ $HOSTNAME != fid-0 ]; then export CLUSTER=join; fi;./run.sh fg",
            ]
        - name: fid-exporter
          image: radiantone/fid-exporter
          env:
            - name: PUSH_MODE
              value: "false"
            - name: LDAP_URI
              value: "ldap://localhost:2389"
            - name: BIND_DN
              valueFrom:
                secretKeyRef:
                  name: fidrootcreds
                  key: username
            - name: BIND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fidrootcreds
                  key: password
          ports:
          - containerPort: 9095   
          securityContext:
            privileged: true
          command:
              [
                "/bin/sh",
                "-c",
                "until nc -w 2 -z localhost 2389; do echo Waiting for fid -- 2389;sleep 10; done;echo \"fid is up!\" && /opt/fidexporter/entry.sh"
              ]   
        - name: fluentd
          image: vamzi/fluentd
          imagePullPolicy: Always
          env:
          - name: FLUENTD_CONF
            value: /etc/fluentd-config/fluentd.conf
          volumeMounts:
          - name: fluentd-config
            mountPath: /etc/fluentd-config
          - name: r1-pvc
            mountPath: /opt/radiantone/vds           
      nodeSelector:
        kubernetes.io/os: linux        
      volumes:
      - name: fluentd-config
        configMap:
          name: fluentd-fid-config
      - name: r1-pvc
        emptyDir: {}
      - name: migrations
        emptyDir: {}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-fid-config
data:
  fluentd.conf: |
    <source>
      @type tail
      read_from_head true
      format multiline
      format_firstline /\d{4}-\d{1,2}-\d{1,2}/
      format1 /^(?<message>.*)$/
      path /opt/radiantone/vds/vds_server/logs/vds_server.log
      pos_file /opt/radiantone/vds/vds_server/logs/vds_server.log.pos
      tag vds_server.log
    </source>

    <filter vds_server.log>
      @type record_transformer
      <record>
      hostname ${hostname}
      </record>
    </filter>

    <match vds_server.log>
      @type elasticsearch
      host elasticsearch.logging
      port 9200
      logstash_format true
      logstash_prefix vds_server.log
    </match>

    <source>
      @type tail
      read_from_head true
      path /opt/radiantone/vds/vds_server/logs/vds_server_access.csv
      pos_file /opt/radiantone/vds/vds_server/logs/vds_server_access.csv.pos
      tag vds_server_access.log
      <parse>
        @type tsv
        keys LOGID,LOGDATE,LOGTIME,LOGTYPE,SERVERID,SERVERPORT,SESSIONID,MSGID,CLIENTIP,BINDDN,BINDUSER,CONNNB,OPNB,OPCODE,OPNAME,BASEDN,ATTRIBUTES,SCOPE,FILTER,SIZELIMIT,TIMELIMIT,LDAPCONTROLS,CHANGES,RESULTCODE,ERRORMESSAGE,MATCHEDDN,NBENTRIES,ETIME
        types LOGID:integer,LOGDATE:string,LOGTIME:string,LOGTYPE:integer,SERVERID:string,SERVERPORT:integer,SESSIONID:integer,MSGID:integer,CLIENTIP:string,BINDDN:string,BINDUSER:string,CONNNB:integer,OPNB:integer,OPCODE:integer,OPNAME:string,BASEDN:string,ATTRIBUTES:string,SCOPE:string,FILTER:string,SIZELIMIT:integer,TIMELIMIT:integer,LDAPCONTROLS:string,CHANGES:string,RESULTCODE:integer,ERRORMESSAGE:string,MATCHEDDN:string,NBENTRIES:integer,ETIME:integer
      </parse>
    </source>

    <filter vds_server_access.log>
      @type record_transformer
      <record>
      hostname ${hostname}
      </record>
    </filter>

    <match vds_server_access.log>
      @type elasticsearch
      host elasticsearch.logging
      port 9200
      logstash_format true
      logstash_prefix vds_server_access.log
    </match>

    <source>
      @type tail
      read_from_head true
      format multiline
      format_firstline /\d{4}-\d{1,2}-\d{1,2}/
      format1 /^(?<message>.*)$/
      path /opt/radiantone/vds/vds_server/logs/periodiccache.log
      pos_file /opt/radiantone/vds/vds_server/logs/periodiccache.log.pos
      tag periodiccache.log
    </source>

    <filter periodiccache.log>
      @type record_transformer
      <record>
      hostname ${hostname}
      </record>
    </filter>

    <match periodiccache.log>
      @type elasticsearch
      host elasticsearch.logging
      port 9200
      logstash_format true
      logstash_prefix periodiccache.log
    </match>

    <source>
      @type tail
      read_from_head true
      format multiline
      format_firstline /\d{4}-\d{1,2}-\d{1,2}/
      format1 /^(?<message>.*)$/
      path /opt/radiantone/vds/vds_server/logs/jetty/web.log
      pos_file /opt/radiantone/vds/vds_server/logs/jetty/web.log.pos
      tag web.log
    </source>

    <filter web.log>
      @type record_transformer
      <record>
      hostname ${hostname}
      </record>
    </filter>

    <match web.log>
      @type elasticsearch
      host elasticsearch.logging
      port 9200
      logstash_format true
      logstash_prefix web.log
    </match>

    <source>
      @type tail
      read_from_head true
      format multiline
      format_firstline /\d{4}-\d{1,2}-\d{1,2}/
      format1 /^(?<message>.*)$/
      path /opt/radiantone/vds/vds_server/logs/jetty/web_access.log
      pos_file /opt/radiantone/vds/vds_server/logs/jetty/web_access.log.pos
      tag web_access.log
    </source>

    <filter web_access.log>
      @type record_transformer
      <record>
      hostname ${hostname}
      </record>
    </filter>

    <match web_access.log>
      @type elasticsearch
      host elasticsearch.logging
      port 9200
      logstash_format true
      logstash_prefix web_access.log
    </match>

    <source>
      @type tail
      read_from_head true
      format multiline
      format_firstline /\d{4}-\d{1,2}-\d{1,2}/
      format1 /^(?<message>.*)$/
      path /opt/radiantone/vds/vds_server/logs/sync_engine/sync_engine.log
      pos_file /opt/radiantone/vds/vds_server/logs/sync_engine/sync_engine.log.pos
      tag sync_engine.log
    </source>

    <filter sync_engine.log>
      @type record_transformer
      <record>
      hostname ${hostname}
      </record>
    </filter>

    <match sync_engine.log>
      @type elasticsearch
      host elasticsearch.logging
      port 9200
      logstash_format true
      logstash_prefix sync_engine.log
    </match>

    <source>
      @type tail
      read_from_head true
      format multiline
      format_firstline /\d{4}-\d{1,2}-\d{1,2}/
      format1 /^(?<message>.*)$/
      path /opt/radiantone/vds/alerts.log
      pos_file /opt/radiantone/vds/alerts.log.pos
      tag alerts.log
    </source>

    <filter alerts.log>
      @type record_transformer
      <record>
      hostname ${hostname}
      </record>
    </filter>

    <match alerts.log>
      @type elasticsearch
      host elasticsearch.logging
      port 9200
      logstash_format true
      logstash_prefix alerts.log
    </match>

    <source>
      @type tail
      read_from_head true
      format multiline
      format_firstline /\d{4}-\d{1,2}-\d{1,2}/
      format1 /^(?<message>.*)$/
      path /opt/radiantone/vds/logs/sync_agents/*/*
      pos_file /opt/radiantone/vds/logs/sync_agents/*/*.pos
      tag sync_agents.log
    </source>

    <filter sync_agents.log>
      @type record_transformer
      <record>
      hostname ${hostname}
      </record>
    </filter>

    <match sync_agents.log>
      @type elasticsearch
      host elasticsearch.logging
      port 9200
      logstash_format true
      logstash_prefix sync_agents.log
    </match>

    <source>
      @type tail
      read_from_head true
      format multiline
      format_firstline /\d{4}-\d{1,2}-\d{1,2}/
      format1 /^(?<message>.*)$/
      path /opt/radiantone/vds/logs/sync_agents/agent_fid_sd_agent_real_time.log
      pos_file /opt/radiantone/vds/logs/sync_agents/agent_fid_sd_agent_real_time.log.pos
      tag agent_fid_sd_agent_real_time.log
    </source>

    <filter agent_fid_sd_agent_real_time.log>
      @type record_transformer
      <record>
      hostname ${hostname}
      </record>
    </filter>

    <match agent_fid_sd_agent_real_time.log>
      @type elasticsearch
      host elasticsearch.logging
      port 9200
      logstash_format true
      logstash_prefix agent_fid_sd_agent_real_time.log
    </match>