apiVersion: v1
kind: Service
metadata:
  name: zookeeper
  labels:
    app: zookeeper
spec:
  ports:
    - port: 2181
      name: zookeeper-client
    - port: 8080
      name: zookeeper-http
  selector:
    app: zookeeper
  type: ClusterIP
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
  labels:
    kubernetes.io/os: linux
spec:
  selector:
    matchLabels:
      app: zookeeper # has to match .spec.template.metadata.labels
  serviceName: "zookeeper"
  replicas: 3
  template:
    metadata:
      labels:
        app: zookeeper # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 30
      containers:
        - name: zookeeper
          image: radiantone/zookeeper:3.5.8
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 2181
              name: zk-client
            - containerPort: 2888
              name: zk-ensemble
            - containerPort: 3888
              name: zk-election
            - containerPort: 8080
              name: zk-admin
          readinessProbe:
            tcpSocket:
              port: 2181
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            tcpSocket:
              port: 2181
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
            successThreshold: 1
          volumeMounts:
            - name: zookeeper-pvc
              mountPath: /opt/radiantone/rli-zookeeper-external
          env:
            - name: CLIENT_PORT
              value: "2181"
            - name: ENSEMBLE_PORT
              value: "2888"
            - name: LEADERRELECTION_PORT
              value: "3888"
            - name: ADMIN_PORT
              value: "8080"
            - name: ZOOKEEPER_FLEET_SIZE
              value: "3"
            - name: JAVA_HOME
              value: "/opt/radiantone/rli-zookeeper-external/jdk/jre/"
          command: ["/bin/sh", "-c"]
          args: ["/opt/radiantone/run.sh"]
        - name: filebeat
          image: docker.elastic.co/beats/filebeat:7.5.0
          args: ["-c", "/etc/filebeat.yml", "-e"]
          securityContext:
            privileged: true
          volumeMounts:
            - name: filebeat-config
              mountPath: /etc/filebeat.yml
              readOnly: true
              subPath: filebeat.yml
            - name: zookeeper-pvc
              mountPath: /var/log/zookeeper
              readOnly: true
              subPath: zookeeper/logs
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
        - name: zookeeper-pvc
          emptyDir: {}
        - name: filebeat-config
          configMap:
            name: filebeat-zk-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: filebeat-zk-config
data:
  filebeat.yml: |-
    filebeat.inputs: 
      - 
        enabled: true
        fields: 
          log_name: zookeeper.log
        fields_under_root: true
        json.overwrite_keys: true
        json.message_key: message
        multiline.negate: true
        multiline.match: after
        multiline.pattern: '^[0-9]{4}-[0-9]{2}-[0-9]{2}'
        paths: 
          - /var/log/zookeeper/zookeeper.log
        type: log
    output.logstash: 
      hosts: 
        - "logstash.logging.svc.cluster.local:5044"
