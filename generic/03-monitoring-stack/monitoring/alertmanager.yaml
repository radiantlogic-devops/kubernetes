apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
  template:
    metadata:
      name: alertmanager
      labels:
        app: alertmanager
    spec:
      containers:
      - args:
        - --config.file=/etc/config/alertmanager.yml
        - --storage.path=/data
        image: quay.io/prometheus/alertmanager:latest
        imagePullPolicy: IfNotPresent
        name: alertmanager
        ports:
        - containerPort: 9093
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /-/ready
            port: 9093
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 30
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
        - mountPath: /data
          name: storage-volume
      - args:
        - --volume-dir=/etc/config
        - --webhook-url=http://127.0.0.1:9093/-/reload
        image: jimmidyson/configmap-reload:v0.5.0
        imagePullPolicy: IfNotPresent
        name: prometheus-alertmanager-configmap-reload
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/config
          name: config-volume
          readOnly: true
      volumes:
      - configMap:
          defaultMode: 420
          name: alertmanager
        name: config-volume
      - name: storage-volume
        emptyDir: {}        
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/path: '/alertmanager/metrics'
  labels:
    name: alertmanager
  name: alertmanager
spec:
  selector:
    app: alertmanager
  type: ClusterIP
  ports:
  - name: alertmanager
    protocol: TCP
    port: 9093
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: alertmanager
data:
  alertmanager.yml: |-
    global:
      smtp_from: username_from@example.com
      smtp_smarthost: 'smtp.example.com:587'
      smtp_auth_username: username_from@example.com
      smtp_auth_password: XXXXXX
      slack_api_url: 'https://hooks.slack.com/services/XXXXXXXXXXXX'
    route:
      receiver: team-fid-devops
      group_by:
        - alertname
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 3h
      routes:
        - matchers:
            - monitor=~"fid|radiantone|vds"
          receiver: team-fid-devops
    inhibit_rules:
      - source_matchers:
          - severity="critical"
        target_matchers:
          - severity="warning"
        equal:
          - alertname
    receivers:
      - name: team-fid-devops
        email_configs:
          - to: username_to@example.com
        slack_configs:
          - channel: '#devops'
            send_resolved: true
            title: >-
              [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing
              | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{
              .CommonLabels.job }}

              {{- if gt (len .CommonLabels) (len .GroupLabels) -}}
                {{" "}}(
                {{- with .CommonLabels.Remove .GroupLabels.Names }}
                  {{- range $index, $label := .SortedPairs -}}
                    {{ if $index }}, {{ end }}
                    {{- $label.Name }}="{{ $label.Value -}}"
                  {{- end }}
                {{- end -}}
                )
              {{- end }}
            text: >-
              {{ range .Alerts -}} *Alert:* {{ .Annotations.title }}{{ if
              .Labels.severity }} - `{{ .Labels.severity }}`{{ end }} *Description:*
              {{ .Annotations.description }} *Details:*
                {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                {{ end }}
              {{ end }}