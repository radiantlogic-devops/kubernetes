apiVersion: v1
kind: Secret
metadata:
  name: fidrootcreds
type: Opaque
data:
  username: Y249RGlyZWN0b3J5IE1hbmFnZXI= # cn=Directory Manager
  password: c2VjcmV0MTIzNA== # secret1234
---
apiVersion: v1
data:
  ZK: "external"
  ZK_CONN_STR: "zookeeper.fid-demo.svc.cluster.local:2181" # this should match the service name from zk deployment
  ZK_CLUSTER: "fid-demo"
  LICENSE: "PASTE_LICENSE_HERE"
kind: ConfigMap
metadata:
  labels:
    role: fid
  name: fid-environment-variables
---
apiVersion: v1
kind: Service
metadata:
  name: fid
  labels:
    app: fid
spec:
  ports:
    - port: 9100
      name: admin-http
    - port: 2389
      name: ldap
    - port: 2636
      name: ldaps
  selector:
    app: fid
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: fid-cp
  labels:
    app: fid-cp
spec:
  ports:
    - port: 7070
      name: cp-http
    - port: 7171
      name: cp-https
    - port: 8089
      name: http
    - port: 8090
      name: https
  selector:
    statefulset.kubernetes.io/pod-name: fid-0
  type: LoadBalancer
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: fid
  labels:
    kubernetes.io/os: linux
spec:
  selector:
    matchLabels:
      app: fid # has to match .spec.template.metadata.labels
  serviceName: "fid"
  replicas: 3
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: fid # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 120
      securityContext:
        fsGroup: 1000
      initContainers:
        - name: check-zk-write
          imagePullPolicy: IfNotPresent
          image: alpine:latest
          command:
              [
                "/bin/sh",
                "-c",
                "if [ $HOSTNAME == fid-0 ]; then until nc -w 2 -z zookeeper-2.zookeeper.fid-demo.svc.cluster.local 2888; do echo Waiting for zookeeper-2.zookeeper.fid-demo.svc.cluster.local -- 2888;sleep 10; done;echo \"zookeeper-2 is up!\"; sleep 60;fi"
              ] 
          securityContext:
            privileged: true
        - name: migration
          image: alpine:latest
          imagePullPolicy: IfNotPresent
          command: ["/bin/sh", "-c","if [ $HOSTNAME == fid-0 ]; then apk add -q --no-cache curl tree; cd /migrations ; curl -o export.zip https://raw.githubusercontent.com/radiantlogic-devops/docker-compose/master/05-monitoring-stack/configs/fid/export.zip; tree;fi"]
          volumeMounts:
          - name: migrations
            mountPath: /migrations
          securityContext:
            privileged: true
        - name: sysctl
          image: busybox
          imagePullPolicy: IfNotPresent
          command:
            [
              "/bin/sh",
              "-c",
              "sysctl -w vm.max_map_count=262144 && set -e && ulimit -n 65536",
            ]
          securityContext:
            privileged: true
      containers:
        - name: fid
          image: radiantone/fid:7.3.16 # Do not change as migration will not be success
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                  [
                    "/bin/sh",
                    "-c",
                    "echo Hello from the fid postStart handler > /opt/radiantone/vds/lifecycle.txt",
                  ]
            preStop:
              exec:
                command: ["/opt/radiantone/vds/bin/stopVDSServer.sh"]
          ports:
            - containerPort: 2181
              name: zk-client
            - containerPort: 7070
              name: cp-http
            - containerPort: 7171
              name: cp-https
            - containerPort: 9100
              name: admin-http
            - containerPort: 9101
              name: admin-https
            - containerPort: 2389
              name: ldap
            - containerPort: 2636
              name: ldaps
            - containerPort: 8089
              name: http
            - containerPort: 8090
              name: https
          readinessProbe:
            tcpSocket:
              port: 2389
            initialDelaySeconds: 120
            periodSeconds: 30
            failureThreshold: 5
            successThreshold: 1
          livenessProbe:
            tcpSocket:
              port: 9100
            initialDelaySeconds: 120
            periodSeconds: 30
            failureThreshold: 5
            successThreshold: 1
          envFrom:
            - configMapRef:
                name: fid-environment-variables
          env:
            - name: ZK_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fidrootcreds
                  key: password
          volumeMounts:
            - name: r1-pvc
              mountPath: /opt/radiantone/vds
            - name: migrations
              mountPath: /migrations
          resources:
            limits:
              cpu: "4"
              memory: 8Gi
            requests:
              cpu: "2"
              memory: 4Gi
          command: ["/bin/sh", "-c"]
          args:
            [
              "if [ $HOSTNAME != fid-0 ]; then export CLUSTER=join; fi;./run.sh fg",
            ]
        - name: fid-exporter
          image: radiantone/fid-exporter
          env:
            - name: PUSH_MODE
              value: "true"
            - name: PUSHGATEWAY_URI
              value: "http://pushgateway.monitoring:9091"
            - name: LDAP_URI
              value: "ldap://localhost:2389"
            - name: BIND_DN
              valueFrom:
                secretKeyRef:
                  name: fidrootcreds
                  key: username
            - name: BIND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: fidrootcreds
                  key: password
          ports:
          - containerPort: 9095   
          securityContext:
            privileged: true
          command:
              [
                "/bin/sh",
                "-c",
                "until nc -w 2 -z localhost 2389; do echo Waiting for fid -- 2389;sleep 10; done;echo \"fid is up!\" && /opt/fidexporter/entry.sh"
              ]       
      nodeSelector:
        kubernetes.io/os: linux        
      volumes:
      - name: r1-pvc
        emptyDir: {}
      - name: migrations
        emptyDir: {}
